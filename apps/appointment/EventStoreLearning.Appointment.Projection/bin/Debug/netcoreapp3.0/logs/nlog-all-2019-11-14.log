{ "time": "2019-11-14 21:34:14.5657", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-14 21:34:16.5333", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Starting projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:34:16.9851", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 1.", "properties": {  } }
{ "time": "2019-11-14 21:34:17.0316", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 1-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:34:17.2630", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:34:18.3865", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserializing metadata for event 854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1", "properties": { "context": "{\"SourceApplication\":\"EventStoreLearningAPI\",\"Id\":\"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1\",\"CorrelationId\":\"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1\",\"CausationId\":\"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1\"}" } }
{ "time": "2019-11-14 21:34:18.3875", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserialized metadata for event 854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1", "properties": { "context": {"SourceApplication":"EventStoreLearningAPI", "Id":"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1", "CorrelationId":"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1", "CausationId":"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1"} } }
{ "time": "2019-11-14 21:34:18.3888", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Adding 1 events to projection processor queue for aggregate type 'Appointment'.", "properties": {  } }
{ "time": "2019-11-14 21:34:18.4038", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:34:26.9845", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Attempting to dequeue item for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:34:26.9845", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Processing dequeued event", "properties": { "context": {"Title":"Meeting #1", "StartTime":"2019-11-15T02:33:24.564Z", "Duration":"01:00:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
{ "time": "2019-11-14 21:34:27.2938", "level": "WARN", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "An error occured while trying to process the queue for aggregate type 'Appointment'!", "properties": { "context": {"Type":"System.AggregateException", "InnerExceptions":[], "Message":"One or more errors occurred. (Handler was not found for request of type MediatR.IRequestHandler`2[EventStoreLearning.Common.EventSourcing.EventRequest`1[EventStoreLearning.Appointment.Events.AppointmentCreatedEvent],MediatR.Unit]. Register your handlers with the container. See the samples in GitHub for examples.)", "TargetSite":"Boolean Wait(Int32, System.Threading.CancellationToken)", "StackTrace":"   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\n   at System.Threading.Tasks.Task.Wait()\n   at EventStoreLearning.EventStore.ProjectionProcessor`1.ProcessQueue() in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/ProjectionProcessor.cs:line 126", "Data":{}, "InnerException":"System.InvalidOperationException: Handler was not found for request of type MediatR.IRequestHandler`2[EventStoreLearning.Common.EventSourcing.EventRequest`1[EventStoreLearning.Appointment.Events.AppointmentCreatedEvent],MediatR.Unit]. Register your handlers with the container. See the samples in GitHub for examples.\n   at MediatR.Internal.RequestHandlerBase.GetHandler[THandler](ServiceFactory factory)\n   at MediatR.Internal.RequestHandlerWrapperImpl`2.<>c__DisplayClass0_0.<Handle>g__Handler|0()\n   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\n   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\n   at CallSite.Target(Closure , CallSite , Object )\n   at System.Dynamic.UpdateDelegates.UpdateAndExecuteVoid1[T0](CallSite site, T0 arg0)\n   at EventStoreLearning.Common.EventSourcing.EventMediator.PublishEvent(Event e, CancellationToken cancelationToken) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.Common\/EventSourcing\/EventMediator.cs:line 37", "Source":"System.Private.CoreLib", "HResult":-2146233088} } }
{ "time": "2019-11-14 21:34:27.3161", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Stopping projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:34:27.4000", "level": "ERROR", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "Stopped program because of exception", "properties": { "exception": "System.InvalidOperationException: Handler was not found for request of type MediatR.IRequestHandler`2[EventStoreLearning.Common.EventSourcing.EventRequest`1[EventStoreLearning.Appointment.Events.AppointmentCreatedEvent],MediatR.Unit]. Register your handlers with the container. See the samples in GitHub for examples.\n   at MediatR.Internal.RequestHandlerBase.GetHandler[THandler](ServiceFactory factory)\n   at MediatR.Internal.RequestHandlerWrapperImpl`2.<>c__DisplayClass0_0.<Handle>g__Handler|0()\n   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\n   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\n   at CallSite.Target(Closure , CallSite , Object )\n   at System.Dynamic.UpdateDelegates.UpdateAndExecuteVoid1[T0](CallSite site, T0 arg0)\n   at EventStoreLearning.Common.EventSourcing.EventMediator.PublishEvent(Event e, CancellationToken cancelationToken) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.Common\/EventSourcing\/EventMediator.cs:line 37" } }
{ "time": "2019-11-14 21:35:59.3889", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-14 21:36:56.2102", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Starting projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:36:56.6416", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 1.", "properties": {  } }
{ "time": "2019-11-14 21:36:56.6835", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 1-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:36:57.1366", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:36:58.0835", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserializing metadata for event 854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1", "properties": { "context": "{\"SourceApplication\":\"EventStoreLearningAPI\",\"Id\":\"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1\",\"CorrelationId\":\"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1\",\"CausationId\":\"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1\"}" } }
{ "time": "2019-11-14 21:36:58.0846", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserialized metadata for event 854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1", "properties": { "context": {"SourceApplication":"EventStoreLearningAPI", "Id":"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1", "CorrelationId":"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1", "CausationId":"854a8d5b-39ab-4eca-a0c6-5d0fd8b1d5b1"} } }
{ "time": "2019-11-14 21:36:58.0874", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Adding 1 events to projection processor queue for aggregate type 'Appointment'.", "properties": {  } }
{ "time": "2019-11-14 21:36:58.1033", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:37:06.6409", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Attempting to dequeue item for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:37:06.6419", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Processing dequeued event", "properties": { "context": {"Title":"Meeting #1", "StartTime":"2019-11-15T02:33:24.564Z", "Duration":"01:00:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
{ "time": "2019-11-14 21:37:06.9215", "level": "WARN", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "An error occured while trying to process the queue for aggregate type 'Appointment'!", "properties": { "context": {"Type":"System.AggregateException", "InnerExceptions":[], "Message":"One or more errors occurred. (Handler was not found for request of type MediatR.IRequestHandler`2[EventStoreLearning.Common.EventSourcing.EventRequest`1[EventStoreLearning.Appointment.Events.AppointmentCreatedEvent],MediatR.Unit]. Register your handlers with the container. See the samples in GitHub for examples.)", "TargetSite":"Boolean Wait(Int32, System.Threading.CancellationToken)", "StackTrace":"   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\n   at System.Threading.Tasks.Task.Wait()\n   at EventStoreLearning.EventStore.ProjectionProcessor`1.ProcessQueue() in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/ProjectionProcessor.cs:line 126", "Data":{}, "InnerException":"System.InvalidOperationException: Handler was not found for request of type MediatR.IRequestHandler`2[EventStoreLearning.Common.EventSourcing.EventRequest`1[EventStoreLearning.Appointment.Events.AppointmentCreatedEvent],MediatR.Unit]. Register your handlers with the container. See the samples in GitHub for examples.\n   at MediatR.Internal.RequestHandlerBase.GetHandler[THandler](ServiceFactory factory)\n   at MediatR.Internal.RequestHandlerWrapperImpl`2.<>c__DisplayClass0_0.<Handle>g__Handler|0()\n   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\n   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\n   at CallSite.Target(Closure , CallSite , Object )\n   at System.Dynamic.UpdateDelegates.UpdateAndExecuteVoid1[T0](CallSite site, T0 arg0)\n   at EventStoreLearning.Common.EventSourcing.EventMediator.PublishEvent(Event e, CancellationToken cancelationToken) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.Common\/EventSourcing\/EventMediator.cs:line 37", "Source":"System.Private.CoreLib", "HResult":-2146233088} } }
{ "time": "2019-11-14 21:37:06.9451", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Stopping projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:37:07.0282", "level": "ERROR", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "Stopped program because of exception", "properties": { "exception": "System.InvalidOperationException: Handler was not found for request of type MediatR.IRequestHandler`2[EventStoreLearning.Common.EventSourcing.EventRequest`1[EventStoreLearning.Appointment.Events.AppointmentCreatedEvent],MediatR.Unit]. Register your handlers with the container. See the samples in GitHub for examples.\n   at MediatR.Internal.RequestHandlerBase.GetHandler[THandler](ServiceFactory factory)\n   at MediatR.Internal.RequestHandlerWrapperImpl`2.<>c__DisplayClass0_0.<Handle>g__Handler|0()\n   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\n   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)\n   at CallSite.Target(Closure , CallSite , Object )\n   at System.Dynamic.UpdateDelegates.UpdateAndExecuteVoid1[T0](CallSite site, T0 arg0)\n   at EventStoreLearning.Common.EventSourcing.EventMediator.PublishEvent(Event e, CancellationToken cancelationToken) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.Common\/EventSourcing\/EventMediator.cs:line 37" } }
{ "time": "2019-11-14 21:43:04.6919", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-14 21:45:16.2923", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-14 21:46:09.9941", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-14 21:46:26.2668", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Starting projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:46:57.0241", "level": "ERROR", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "Stopped program because of exception", "properties": { "exception": "System.TimeoutException: A timeout occured after 30000ms selecting a server using CompositeServerSelector{ Selectors = MongoDB.Driver.MongoClient+AreSessionsSupportedServerSelector, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 } }. Client view of cluster state is { ClusterId : \"1\", ConnectionMode : \"Automatic\", Type : \"Unknown\", State : \"Disconnected\", Servers : [{ ServerId: \"{ ClusterId : 1, EndPoint : \"Unspecified\/localhost:27017\" }\", EndPoint: \"Unspecified\/localhost:27017\", State: \"Disconnected\", Type: \"Unknown\", HeartbeatException: \"MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.\n ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (61): Connection refused [::1]:27017\n   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)\n   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__274_0(IAsyncResult iar)\n--- End of stack trace from previous location where exception was thrown ---\n   at MongoDB.Driver.Core.Connections.TcpStreamFactory.ConnectAsync(Socket socket, EndPoint endPoint, CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Connections.TcpStreamFactory.CreateStreamAsync(EndPoint endPoint, CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelperAsync(CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelperAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Servers.ServerMonitor.HeartbeatAsync(CancellationToken cancellationToken)\", LastUpdateTimestamp: \"2019-11-15T02:46:56.1122140Z\" }] }.\n   at MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)\n   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedHelper.HandleCompletedTask(Task completedTask)\n   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoClient.AreSessionsSupportedAfterSeverSelctionAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoClient.AreSessionsSupportedAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoClient.StartImplicitSessionAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)\n   at EventStoreLearning.Appointment.ReadModel.Repositories.ProjectionInfoRepository.RetrieveProjectionInfo() in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/appointment\/EventStoreLearning.Appointment.ReadModel\/Repositories\/ProjectionInfoRepository.cs:line 25\n   at EventStoreLearning.Appointment.Projection.AppointmentProjectionProcessor.GetStartEventPosition() in \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.Projection\/AppointmentProjectionProcessor.cs:line 23" } }
{ "time": "2019-11-14 21:47:35.5706", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-14 21:47:36.6653", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Starting projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:48:07.4104", "level": "ERROR", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "Stopped program because of exception", "properties": { "exception": "System.TimeoutException: A timeout occured after 30000ms selecting a server using CompositeServerSelector{ Selectors = MongoDB.Driver.MongoClient+AreSessionsSupportedServerSelector, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 } }. Client view of cluster state is { ClusterId : \"1\", ConnectionMode : \"Automatic\", Type : \"Unknown\", State : \"Disconnected\", Servers : [{ ServerId: \"{ ClusterId : 1, EndPoint : \"Unspecified\/localhost:27017\" }\", EndPoint: \"Unspecified\/localhost:27017\", State: \"Disconnected\", Type: \"Unknown\", HeartbeatException: \"MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.\n ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (61): Connection refused [::1]:27017\n   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)\n   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__274_0(IAsyncResult iar)\n--- End of stack trace from previous location where exception was thrown ---\n   at MongoDB.Driver.Core.Connections.TcpStreamFactory.ConnectAsync(Socket socket, EndPoint endPoint, CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Connections.TcpStreamFactory.CreateStreamAsync(EndPoint endPoint, CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelperAsync(CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelperAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Servers.ServerMonitor.HeartbeatAsync(CancellationToken cancellationToken)\", LastUpdateTimestamp: \"2019-11-15T02:48:06.5169450Z\" }] }.\n   at MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)\n   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedHelper.HandleCompletedTask(Task completedTask)\n   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoClient.AreSessionsSupportedAfterSeverSelctionAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoClient.AreSessionsSupportedAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoClient.StartImplicitSessionAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)\n   at EventStoreLearning.Appointment.ReadModel.Repositories.ProjectionInfoRepository.RetrieveProjectionInfo() in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/appointment\/EventStoreLearning.Appointment.ReadModel\/Repositories\/ProjectionInfoRepository.cs:line 25\n   at EventStoreLearning.Appointment.Projection.AppointmentProjectionProcessor.GetStartEventPosition() in \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.Projection\/AppointmentProjectionProcessor.cs:line 23" } }
{ "time": "2019-11-14 21:48:26.6599", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-14 21:48:27.5782", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Starting projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:48:27.9538", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 1.", "properties": {  } }
{ "time": "2019-11-14 21:48:28.0064", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 1-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:48:30.5664", "level": "WARN", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "An error occured while trying to fetch events for aggregate type 'Appointment'!", "properties": { "context": {"Type":"System.AggregateException", "InnerExceptions":[], "Message":"One or more errors occurred. (Connection 'ES-f1b33ccf-ec90-4b36-b4b1-053c1c1c9e71' was closed.)", "TargetSite":"TResult GetResultCore(Boolean)", "StackTrace":"   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\n   at System.Threading.Tasks.Task`1.get_Result()\n   at EventStoreLearning.EventStore.ProjectionProcessor`1.Enqueue() in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/ProjectionProcessor.cs:line 73", "Data":{}, "InnerException":"EventStore.ClientAPI.Exceptions.ConnectionClosedException: Connection 'ES-f1b33ccf-ec90-4b36-b4b1-053c1c1c9e71' was closed.\n   at EventStoreLearning.EventStore.EventRepository.GetAllEventsFromStream(String streamName, Int64 start) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/EventRepository.cs:line 51\n   at EventStoreLearning.EventStore.EventRepository.GetAllEventsForAggregateType[T](Int64 start) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/EventRepository.cs:line 93", "Source":"System.Private.CoreLib", "HResult":-2146233088} } }
{ "time": "2019-11-14 21:48:30.5679", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Reconnection limit reached.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:48:30.6164", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Stopping projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:48:30.7071", "level": "ERROR", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "Stopped program because of exception", "properties": { "exception": "EventStore.ClientAPI.Exceptions.ConnectionClosedException: Connection 'ES-f1b33ccf-ec90-4b36-b4b1-053c1c1c9e71' was closed.\n   at EventStoreLearning.EventStore.EventRepository.GetAllEventsFromStream(String streamName, Int64 start) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/EventRepository.cs:line 51\n   at EventStoreLearning.EventStore.EventRepository.GetAllEventsForAggregateType[T](Int64 start) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/EventRepository.cs:line 93" } }
{ "time": "2019-11-14 21:49:11.7451", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-14 21:49:12.6837", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Starting projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:49:13.0531", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 1.", "properties": {  } }
{ "time": "2019-11-14 21:49:13.0976", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 1-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:49:15.7005", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Reconnection limit reached.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:49:15.6990", "level": "WARN", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "An error occured while trying to fetch events for aggregate type 'Appointment'!", "properties": { "context": {"Type":"System.AggregateException", "InnerExceptions":[], "Message":"One or more errors occurred. (Connection 'ES-4bd3ef82-468e-4041-93fb-601df87a0d2d' was closed.)", "TargetSite":"TResult GetResultCore(Boolean)", "StackTrace":"   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\n   at System.Threading.Tasks.Task`1.get_Result()\n   at EventStoreLearning.EventStore.ProjectionProcessor`1.Enqueue() in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/ProjectionProcessor.cs:line 73", "Data":{}, "InnerException":"EventStore.ClientAPI.Exceptions.ConnectionClosedException: Connection 'ES-4bd3ef82-468e-4041-93fb-601df87a0d2d' was closed.\n   at EventStoreLearning.EventStore.EventRepository.GetAllEventsFromStream(String streamName, Int64 start) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/EventRepository.cs:line 51\n   at EventStoreLearning.EventStore.EventRepository.GetAllEventsForAggregateType[T](Int64 start) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/EventRepository.cs:line 93", "Source":"System.Private.CoreLib", "HResult":-2146233088} } }
{ "time": "2019-11-14 21:49:15.7423", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Stopping projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:49:15.8307", "level": "ERROR", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "Stopped program because of exception", "properties": { "exception": "EventStore.ClientAPI.Exceptions.ConnectionClosedException: Connection 'ES-4bd3ef82-468e-4041-93fb-601df87a0d2d' was closed.\n   at EventStoreLearning.EventStore.EventRepository.GetAllEventsFromStream(String streamName, Int64 start) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/EventRepository.cs:line 51\n   at EventStoreLearning.EventStore.EventRepository.GetAllEventsForAggregateType[T](Int64 start) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/EventRepository.cs:line 93" } }
{ "time": "2019-11-14 21:51:48.5988", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-14 21:51:49.5380", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Starting projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:51:49.9111", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 0.", "properties": {  } }
{ "time": "2019-11-14 21:51:49.9564", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 0-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:51:50.1985", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:51:51.0260", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:52:01.0131", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 0.", "properties": {  } }
{ "time": "2019-11-14 21:52:01.0180", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 0-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:52:01.0507", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:52:02.0229", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:52:12.0225", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 0.", "properties": {  } }
{ "time": "2019-11-14 21:52:12.0263", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 0-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:52:12.0385", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:52:13.0291", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:52:23.0294", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 0.", "properties": {  } }
{ "time": "2019-11-14 21:52:23.0329", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 0-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:52:23.0506", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:52:24.0371", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:54:17.1379", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-14 21:54:18.1110", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Starting projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:54:18.4741", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 0.", "properties": {  } }
{ "time": "2019-11-14 21:54:18.5142", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 0-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:54:18.6669", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:54:19.5570", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:54:29.5429", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 0.", "properties": {  } }
{ "time": "2019-11-14 21:54:29.5479", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 0-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:54:29.5597", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:54:30.5578", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:54:40.5541", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 0.", "properties": {  } }
{ "time": "2019-11-14 21:54:40.5583", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 0-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:54:40.5697", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:54:41.5645", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:54:51.5646", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 0.", "properties": {  } }
{ "time": "2019-11-14 21:54:51.5685", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 0-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:54:51.5812", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:54:52.5768", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:55:02.5731", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 0.", "properties": {  } }
{ "time": "2019-11-14 21:55:02.5756", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 0-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:55:02.5867", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:55:03.5814", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:55:13.5812", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 0.", "properties": {  } }
{ "time": "2019-11-14 21:55:13.5837", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 0-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:55:13.6113", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:55:14.8919", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserializing metadata for event edb43c3b-b6b3-41c9-a110-d655f87947d1", "properties": { "context": "{\"SourceApplication\":\"EventStoreLearningAPI\",\"Id\":\"edb43c3b-b6b3-41c9-a110-d655f87947d1\",\"CorrelationId\":\"edb43c3b-b6b3-41c9-a110-d655f87947d1\",\"CausationId\":\"edb43c3b-b6b3-41c9-a110-d655f87947d1\"}" } }
{ "time": "2019-11-14 21:55:14.8919", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserialized metadata for event edb43c3b-b6b3-41c9-a110-d655f87947d1", "properties": { "context": {"SourceApplication":"EventStoreLearningAPI", "Id":"edb43c3b-b6b3-41c9-a110-d655f87947d1", "CorrelationId":"edb43c3b-b6b3-41c9-a110-d655f87947d1", "CausationId":"edb43c3b-b6b3-41c9-a110-d655f87947d1"} } }
{ "time": "2019-11-14 21:55:14.8934", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserializing metadata for event 58710061-9bae-46c7-bb1d-54d45ecece93", "properties": { "context": "{\"SourceApplication\":\"EventStoreLearningAPI\",\"Id\":\"58710061-9bae-46c7-bb1d-54d45ecece93\",\"CorrelationId\":\"58710061-9bae-46c7-bb1d-54d45ecece93\",\"CausationId\":\"58710061-9bae-46c7-bb1d-54d45ecece93\"}" } }
{ "time": "2019-11-14 21:55:14.8934", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserialized metadata for event 58710061-9bae-46c7-bb1d-54d45ecece93", "properties": { "context": {"SourceApplication":"EventStoreLearningAPI", "Id":"58710061-9bae-46c7-bb1d-54d45ecece93", "CorrelationId":"58710061-9bae-46c7-bb1d-54d45ecece93", "CausationId":"58710061-9bae-46c7-bb1d-54d45ecece93"} } }
{ "time": "2019-11-14 21:55:14.8947", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Adding 2 events to projection processor queue for aggregate type 'Appointment'.", "properties": {  } }
{ "time": "2019-11-14 21:55:14.8963", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:55:18.4744", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Attempting to dequeue item for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:55:18.4751", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Processing dequeued event", "properties": { "context": {"Title":"Some Meeting #1", "StartTime":"2019-11-15T02:53:19.844Z", "Duration":"01:00:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
{ "time": "2019-11-14 21:55:18.5278", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.AppointmentEventHandler", "message": "Handling event AppointmentCreatedEvent for Aggregate Appointment", "properties": { "context": {"Title":"Some Meeting #1", "StartTime":"2019-11-15T02:53:19.844Z", "Duration":"01:00:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
{ "time": "2019-11-14 21:55:18.6718", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Attempting to dequeue item for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:55:18.6718", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Processing dequeued event", "properties": { "context": {"Title":"Lunch", "StartTime":"2019-11-15T02:53:19.844Z", "Duration":"00:30:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
{ "time": "2019-11-14 21:55:18.6727", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.AppointmentEventHandler", "message": "Handling event AppointmentCreatedEvent for Aggregate Appointment", "properties": { "context": {"Title":"Lunch", "StartTime":"2019-11-15T02:53:19.844Z", "Duration":"00:30:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
{ "time": "2019-11-14 21:55:24.8949", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 1.", "properties": {  } }
{ "time": "2019-11-14 21:55:24.8984", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 1-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:55:24.9114", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:55:25.9027", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserializing metadata for event 58710061-9bae-46c7-bb1d-54d45ecece93", "properties": { "context": "{\"SourceApplication\":\"EventStoreLearningAPI\",\"Id\":\"58710061-9bae-46c7-bb1d-54d45ecece93\",\"CorrelationId\":\"58710061-9bae-46c7-bb1d-54d45ecece93\",\"CausationId\":\"58710061-9bae-46c7-bb1d-54d45ecece93\"}" } }
{ "time": "2019-11-14 21:55:25.9034", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserialized metadata for event 58710061-9bae-46c7-bb1d-54d45ecece93", "properties": { "context": {"SourceApplication":"EventStoreLearningAPI", "Id":"58710061-9bae-46c7-bb1d-54d45ecece93", "CorrelationId":"58710061-9bae-46c7-bb1d-54d45ecece93", "CausationId":"58710061-9bae-46c7-bb1d-54d45ecece93"} } }
{ "time": "2019-11-14 21:55:25.9054", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Adding 1 events to projection processor queue for aggregate type 'Appointment'.", "properties": {  } }
{ "time": "2019-11-14 21:55:25.9054", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:55:28.7289", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Attempting to dequeue item for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:55:28.7295", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Processing dequeued event", "properties": { "context": {"Title":"Lunch", "StartTime":"2019-11-15T02:53:19.844Z", "Duration":"00:30:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
{ "time": "2019-11-14 21:55:28.7335", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.AppointmentEventHandler", "message": "Handling event AppointmentCreatedEvent for Aggregate Appointment", "properties": { "context": {"Title":"Lunch", "StartTime":"2019-11-15T02:53:19.844Z", "Duration":"00:30:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
{ "time": "2019-11-14 21:55:35.9065", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 1.", "properties": {  } }
{ "time": "2019-11-14 21:55:35.9090", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 1-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:55:35.9393", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:55:36.9150", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserializing metadata for event 58710061-9bae-46c7-bb1d-54d45ecece93", "properties": { "context": "{\"SourceApplication\":\"EventStoreLearningAPI\",\"Id\":\"58710061-9bae-46c7-bb1d-54d45ecece93\",\"CorrelationId\":\"58710061-9bae-46c7-bb1d-54d45ecece93\",\"CausationId\":\"58710061-9bae-46c7-bb1d-54d45ecece93\"}" } }
{ "time": "2019-11-14 21:55:36.9150", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserialized metadata for event 58710061-9bae-46c7-bb1d-54d45ecece93", "properties": { "context": {"SourceApplication":"EventStoreLearningAPI", "Id":"58710061-9bae-46c7-bb1d-54d45ecece93", "CorrelationId":"58710061-9bae-46c7-bb1d-54d45ecece93", "CausationId":"58710061-9bae-46c7-bb1d-54d45ecece93"} } }
{ "time": "2019-11-14 21:55:36.9173", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Adding 1 events to projection processor queue for aggregate type 'Appointment'.", "properties": {  } }
{ "time": "2019-11-14 21:55:36.9173", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:55:38.7753", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Attempting to dequeue item for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:55:38.7753", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Processing dequeued event", "properties": { "context": {"Title":"Lunch", "StartTime":"2019-11-15T02:53:19.844Z", "Duration":"00:30:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
{ "time": "2019-11-14 21:55:38.7788", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.AppointmentEventHandler", "message": "Handling event AppointmentCreatedEvent for Aggregate Appointment", "properties": { "context": {"Title":"Lunch", "StartTime":"2019-11-15T02:53:19.844Z", "Duration":"00:30:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
{ "time": "2019-11-14 21:55:46.9183", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting all events for Aggregate of type Appointment (Stream '$ce-Appointment') starting at position 1.", "properties": {  } }
{ "time": "2019-11-14 21:55:46.9209", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Getting event slice 1-200 from stream '$ce-Appointment' from the event store.", "properties": {  } }
{ "time": "2019-11-14 21:55:46.9318", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:55:47.9268", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserializing metadata for event 58710061-9bae-46c7-bb1d-54d45ecece93", "properties": { "context": "{\"SourceApplication\":\"EventStoreLearningAPI\",\"Id\":\"58710061-9bae-46c7-bb1d-54d45ecece93\",\"CorrelationId\":\"58710061-9bae-46c7-bb1d-54d45ecece93\",\"CausationId\":\"58710061-9bae-46c7-bb1d-54d45ecece93\"}" } }
{ "time": "2019-11-14 21:55:47.9268", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Deserialized metadata for event 58710061-9bae-46c7-bb1d-54d45ecece93", "properties": { "context": {"SourceApplication":"EventStoreLearningAPI", "Id":"58710061-9bae-46c7-bb1d-54d45ecece93", "CorrelationId":"58710061-9bae-46c7-bb1d-54d45ecece93", "CausationId":"58710061-9bae-46c7-bb1d-54d45ecece93"} } }
{ "time": "2019-11-14 21:55:47.9290", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Adding 1 events to projection processor queue for aggregate type 'Appointment'.", "properties": {  } }
{ "time": "2019-11-14 21:55:47.9294", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-14 21:55:48.8113", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Attempting to dequeue item for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-11-14 21:55:48.8113", "level": "TRACE", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Processing dequeued event", "properties": { "context": {"Title":"Lunch", "StartTime":"2019-11-15T02:53:19.844Z", "Duration":"00:30:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
{ "time": "2019-11-14 21:55:48.8150", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.AppointmentEventHandler", "message": "Handling event AppointmentCreatedEvent for Aggregate Appointment", "properties": { "context": {"Title":"Lunch", "StartTime":"2019-11-15T02:53:19.844Z", "Duration":"00:30:00", "AggregateId":"00000000-0000-0000-0000-000000000000"} } }
