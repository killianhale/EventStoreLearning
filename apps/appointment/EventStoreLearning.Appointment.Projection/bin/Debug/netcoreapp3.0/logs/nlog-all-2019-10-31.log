{ "time": "2019-10-31 16:10:38.6922", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-10-31 16:10:39.8573", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Starting projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-10-31 16:11:10.6842", "level": "ERROR", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "Stopped program because of exception", "properties": { "exception": "System.TimeoutException: A timeout occured after 30000ms selecting a server using CompositeServerSelector{ Selectors = MongoDB.Driver.MongoClient+AreSessionsSupportedServerSelector, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 } }. Client view of cluster state is { ClusterId : \"1\", ConnectionMode : \"Automatic\", Type : \"Unknown\", State : \"Disconnected\", Servers : [{ ServerId: \"{ ClusterId : 1, EndPoint : \"Unspecified\/localhost:27017\" }\", EndPoint: \"Unspecified\/localhost:27017\", State: \"Disconnected\", Type: \"Unknown\", HeartbeatException: \"MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server.\n ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException (61): Connection refused [::1]:27017\n   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)\n   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__274_0(IAsyncResult iar)\n--- End of stack trace from previous location where exception was thrown ---\n   at MongoDB.Driver.Core.Connections.TcpStreamFactory.ConnectAsync(Socket socket, EndPoint endPoint, CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Connections.TcpStreamFactory.CreateStreamAsync(EndPoint endPoint, CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelperAsync(CancellationToken cancellationToken)\n   --- End of inner exception stack trace ---\n   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelperAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Servers.ServerMonitor.HeartbeatAsync(CancellationToken cancellationToken)\", LastUpdateTimestamp: \"2019-10-31T20:11:09.7693910Z\" }] }.\n   at MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)\n   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedHelper.HandleCompletedTask(Task completedTask)\n   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)\n   at MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoClient.AreSessionsSupportedAfterSeverSelctionAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoClient.AreSessionsSupportedAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoClient.StartImplicitSessionAsync(CancellationToken cancellationToken)\n   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)\n   at EventStoreLearning.Appointment.ReadModel.Repositories.ProjectionInfoRepository.RetrieveProjectionInfo() in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/appointment\/EventStoreLearning.Appointment.ReadModel\/Repositories\/ProjectionInfoRepository.cs:line 25\n   at EventStoreLearning.Appointment.Projection.AppointmentProjectionProcessor.GetStartEventPosition() in \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.Projection\/AppointmentProjectionProcessor.cs:line 23" } }
{ "time": "2019-10-31 16:12:34.1550", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.Projection.Program", "message": "init main", "properties": {  } }
{ "time": "2019-10-31 16:12:35.1993", "level": "INFO", "logger": "EventStoreLearning.EventStore.ProjectionProcessor`1", "message": "Starting projection processor for aggregate type 'Appointment'...", "properties": {  } }
{ "time": "2019-10-31 16:12:35.5341", "level": "INFO", "logger": "EventStoreLearning.EventStore.AggregateStore", "message": "Getting all events for Aggregate of type Appointment starting at position 0.", "properties": {  } }
{ "time": "2019-10-31 16:12:35.5763", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.AggregateStore", "message": "Getting event slice 0-200 for Aggregate of type Appointment from the event store.", "properties": {  } }
{ "time": "2019-10-31 16:12:37.3747", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-10-31 16:12:45.4977", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-10-31 16:12:55.4595", "level": "INFO", "logger": "EventStoreLearning.EventStore.AggregateStore", "message": "Getting all events for Aggregate of type Appointment starting at position 0.", "properties": {  } }
{ "time": "2019-10-31 16:12:55.4634", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.AggregateStore", "message": "Getting event slice 0-200 for Aggregate of type Appointment from the event store.", "properties": {  } }
{ "time": "2019-10-31 16:12:55.4733", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-10-31 16:12:56.4725", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-10-31 16:13:06.4696", "level": "INFO", "logger": "EventStoreLearning.EventStore.AggregateStore", "message": "Getting all events for Aggregate of type Appointment starting at position 0.", "properties": {  } }
{ "time": "2019-10-31 16:13:06.4725", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.AggregateStore", "message": "Getting event slice 0-200 for Aggregate of type Appointment from the event store.", "properties": {  } }
{ "time": "2019-10-31 16:13:06.4819", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-10-31 16:13:07.4758", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-10-31 16:13:17.4747", "level": "INFO", "logger": "EventStoreLearning.EventStore.AggregateStore", "message": "Getting all events for Aggregate of type Appointment starting at position 0.", "properties": {  } }
{ "time": "2019-10-31 16:13:17.4779", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.AggregateStore", "message": "Getting event slice 0-200 for Aggregate of type Appointment from the event store.", "properties": {  } }
{ "time": "2019-10-31 16:13:17.4887", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-10-31 16:13:18.4938", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-10-31 16:13:28.4932", "level": "INFO", "logger": "EventStoreLearning.EventStore.AggregateStore", "message": "Getting all events for Aggregate of type Appointment starting at position 0.", "properties": {  } }
{ "time": "2019-10-31 16:13:28.4954", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.AggregateStore", "message": "Getting event slice 0-200 for Aggregate of type Appointment from the event store.", "properties": {  } }
{ "time": "2019-10-31 16:13:28.5040", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-10-31 16:13:29.7029", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
