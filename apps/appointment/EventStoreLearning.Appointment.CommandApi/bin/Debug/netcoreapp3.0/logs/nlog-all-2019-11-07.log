{ "time": "2019-11-07 00:04:45.5255", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 00:04:47.3657", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 00:04:47.8088", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 00:04:47.8137", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 00:04:47.8169", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 00:04:47.8202", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 00:04:47.9968", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:04:48.1536", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 158.9122ms 301 ", "properties": { "ElapsedMilliseconds": 158.9122, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:04:48.1905", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:04:48.3397", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 148.8308ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 148.8308, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:04:49.5402", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:04:49.5481", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 8.3756ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 8.3756, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:04:49.9995", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:04:50.1665", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 168.6944ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 168.6944, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:04:55.0320", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json-patch+json 77", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json-patch+json", "ContentLength": 77, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:04:55.0842", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 00:06:53.8259", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 00:06:55.7036", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 00:06:56.1748", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 00:06:56.1832", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 00:06:56.1867", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 00:06:56.1909", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 00:06:56.3479", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:06:56.5064", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 160.4256ms 301 ", "properties": { "ElapsedMilliseconds": 160.4256, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:06:56.5431", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:06:56.6967", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 153.2183ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 153.2183, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:06:57.9296", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:06:57.9397", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 11.3161ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 11.3161, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:06:58.2602", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:06:58.4190", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 177.34400000000002ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 177.34400000000002, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:07:04.6551", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json-patch+json 77", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json-patch+json", "ContentLength": 77, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:07:04.7013", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 00:07:28.4678", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 00:07:30.3388", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 00:07:30.7743", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 00:07:30.7783", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 00:07:30.7811", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 00:07:30.7843", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 00:07:30.9444", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:07:31.1016", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 157.8467ms 301 ", "properties": { "ElapsedMilliseconds": 157.8467, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:07:31.1384", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:07:31.2881", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 149.3864ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 149.3864, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:07:32.5095", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:07:32.5176", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 7.9881ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 7.9881, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:07:32.8800", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:07:33.0315", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 155.2842ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 155.2842, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:07:42.4072", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json-patch+json 77", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json-patch+json", "ContentLength": 77, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:07:42.4563", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(System.Object) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(System.Object)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 00:12:26.7038", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 00:12:28.5724", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 00:12:29.0165", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 00:12:29.0213", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 00:12:29.0244", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 00:12:29.0278", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 00:12:29.1816", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:12:29.3319", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 152.092ms 301 ", "properties": { "ElapsedMilliseconds": 152.092, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:12:29.3676", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:12:29.5146", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 146.9498ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 146.9498, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:12:30.7404", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:12:30.7484", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 7.6817ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 7.6817, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:12:31.1555", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:12:31.2994", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 145.7344ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 145.7344, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:12:54.3657", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json-patch+json 71", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json-patch+json", "ContentLength": 71, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:12:54.4085", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(System.Object) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(System.Object)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 00:14:20.3422", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 00:14:22.1666", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 00:14:22.6187", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 00:14:22.6230", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 00:14:22.6264", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 00:14:22.6296", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 00:14:22.7846", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:14:22.9408", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 158.5469ms 301 ", "properties": { "ElapsedMilliseconds": 158.5469, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:14:22.9812", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:14:23.1321", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 151.1659ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 151.1659, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:14:24.3321", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:14:24.3394", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 6.7001ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 6.7001, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:14:24.6536", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:14:24.8043", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 146.8162ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 146.8162, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:14:43.2551", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json-patch+json 78", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json-patch+json", "ContentLength": 78, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:14:43.3163", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 00:15:01.5320", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Executed action EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi) in 18203.0551ms", "properties": { "ActionName": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi)", "ElapsedMilliseconds": 18203.0551, "EventId_Id": 2, "EventId_Name": "ActionExecuted", "EventId": {"Id":2, "Name":"ActionExecuted"} } }
{ "time": "2019-11-07 00:15:01.5659", "level": "ERROR", "logger": "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware", "message": "An unhandled exception has occurred while executing the request.", "properties": { "exception": "AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.\n\nMapping types:\nCreateAppointmentRequest -> CreateAppointmentCommand\nEventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest -> EventStoreLearning.Appointment.Commands.CreateAppointmentCommand\n   at lambda_method(Closure , CreateAppointmentRequest , CreateAppointmentCommand , ResolutionContext )\n   at lambda_method(Closure , Object , Object , ResolutionContext )\n   at EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post(CreateAppointmentRequest request) in \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi\/Controllers\/AppointmentController.cs:line 67\n   at lambda_method(Closure , Object )\n   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\n--- End of stack trace from previous location where exception was thrown ---\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\n--- End of stack trace from previous location where exception was thrown ---\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)", "EventId_Id": 1, "EventId_Name": "UnhandledException", "EventId": {"Id":1, "Name":"UnhandledException"} } }
{ "time": "2019-11-07 00:15:01.5945", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 18340.0308ms 500 text\/plain", "properties": { "ElapsedMilliseconds": 18340.0308, "StatusCode": 500, "ContentType": "text\/plain", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:22:53.7194", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 00:22:55.5961", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 00:22:56.0272", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 00:22:56.0319", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 00:22:56.0351", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 00:22:56.0378", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 00:22:56.2168", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:22:56.3691", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 154.10240000000002ms 301 ", "properties": { "ElapsedMilliseconds": 154.10240000000002, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:22:56.4073", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:22:56.5528", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 143.7218ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 143.7218, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:22:57.8723", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:22:57.8811", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 8.835600000000001ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 8.835600000000001, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:22:58.1596", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:22:58.3348", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 176.2098ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 176.2098, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:23:11.0822", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json-patch+json 78", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json-patch+json", "ContentLength": 78, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:23:11.1269", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 00:23:16.7111", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Executed action EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi) in 5571.6315ms", "properties": { "ActionName": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi)", "ElapsedMilliseconds": 5571.6315, "EventId_Id": 2, "EventId_Name": "ActionExecuted", "EventId": {"Id":2, "Name":"ActionExecuted"} } }
{ "time": "2019-11-07 00:23:16.7648", "level": "ERROR", "logger": "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware", "message": "An unhandled exception has occurred while executing the request.", "properties": { "exception": "AutoMapper.AutoMapperMappingException: Missing type map configuration or unsupported mapping.\n\nMapping types:\nCreateAppointmentRequest -> CreateAppointmentCommand\nEventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest -> EventStoreLearning.Appointment.Commands.CreateAppointmentCommand\n   at lambda_method(Closure , CreateAppointmentRequest , CreateAppointmentCommand , ResolutionContext )\n   at lambda_method(Closure , Object , Object , ResolutionContext )\n   at EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post(CreateAppointmentRequest request) in \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi\/Controllers\/AppointmentController.cs:line 67\n   at lambda_method(Closure , Object )\n   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\n--- End of stack trace from previous location where exception was thrown ---\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\n--- End of stack trace from previous location where exception was thrown ---\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)", "EventId_Id": 1, "EventId_Name": "UnhandledException", "EventId": {"Id":1, "Name":"UnhandledException"} } }
{ "time": "2019-11-07 00:23:16.7996", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 5718.061900000001ms 500 text\/plain", "properties": { "ElapsedMilliseconds": 5718.061900000001, "StatusCode": 500, "ContentType": "text\/plain", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:28:41.2406", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 00:28:43.0728", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 00:28:43.5264", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 00:28:43.5311", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 00:28:43.5350", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 00:28:43.5385", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 00:28:43.7204", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:28:43.8743", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 156.22240000000002ms 301 ", "properties": { "ElapsedMilliseconds": 156.22240000000002, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:28:43.9101", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:28:44.0553", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 144.7547ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 144.7547, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:28:45.2495", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:28:45.2561", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 6.8794ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 6.8794, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:28:45.5767", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:28:45.7246", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 148.84900000000002ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 148.84900000000002, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:28:55.7841", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json-patch+json 78", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json-patch+json", "ContentLength": 78, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:28:55.8350", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 00:29:01.1794", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Executed action EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi) in 5332.421ms", "properties": { "ActionName": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi)", "ElapsedMilliseconds": 5332.421, "EventId_Id": 2, "EventId_Name": "ActionExecuted", "EventId": {"Id":2, "Name":"ActionExecuted"} } }
{ "time": "2019-11-07 00:29:01.2133", "level": "ERROR", "logger": "Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware", "message": "An unhandled exception has occurred while executing the request.", "properties": { "exception": "System.ArgumentException: EventStoreLearning.Appointment.Commands.CreateAppointmentCommand needs to have a constructor with 0 args or only optional args. (Parameter 'type')\n   at lambda_method(Closure , CreateAppointmentRequest , CreateAppointmentCommand , ResolutionContext )\n   at lambda_method(Closure , Object , Object , ResolutionContext )\n   at AutoMapper.Mapper.Map[TDestination](Object source)\n   at EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post(CreateAppointmentRequest request) in \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi\/Controllers\/AppointmentController.cs:line 67\n   at lambda_method(Closure , Object )\n   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\n--- End of stack trace from previous location where exception was thrown ---\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()\n--- End of stack trace from previous location where exception was thrown ---\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\n   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)", "EventId_Id": 1, "EventId_Name": "UnhandledException", "EventId": {"Id":1, "Name":"UnhandledException"} } }
{ "time": "2019-11-07 00:29:01.2456", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 5463.9622ms 500 text\/plain", "properties": { "ElapsedMilliseconds": 5463.9622, "StatusCode": 500, "ContentType": "text\/plain", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:32:55.7052", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 00:32:57.6038", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 00:32:58.0702", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 00:32:58.0760", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 00:32:58.0839", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 00:32:58.0878", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 00:32:58.2618", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:32:58.4179", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 157.12550000000002ms 301 ", "properties": { "ElapsedMilliseconds": 157.12550000000002, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:32:58.4533", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:32:58.6088", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 154.8398ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 154.8398, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:32:59.7879", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:32:59.7952", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 6.7839ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 6.7839, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:33:00.1653", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:33:00.3221", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 160.3308ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 160.3308, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:33:22.3330", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json-patch+json 89", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json-patch+json", "ContentLength": 89, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:33:22.3860", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 00:36:13.3343", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 00:36:15.2136", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 00:36:15.7098", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 00:36:15.7173", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 00:36:15.7208", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 00:36:15.7241", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 00:36:15.9371", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:36:16.1099", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 178.7054ms 301 ", "properties": { "ElapsedMilliseconds": 178.7054, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:36:16.1475", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:36:16.3047", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 155.4993ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 155.4993, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:36:17.5428", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:36:17.5516", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 8.335600000000001ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 8.335600000000001, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:36:17.9058", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:36:18.0622", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 160.5344ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 160.5344, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:36:48.6194", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json 78", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json", "ContentLength": 78, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:36:48.6947", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 00:45:17.8411", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 00:45:19.6893", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 00:45:20.1476", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 00:45:20.1565", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 00:45:20.1599", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 00:45:20.1638", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 00:45:20.3627", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:45:20.5314", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 170.18800000000002ms 301 ", "properties": { "ElapsedMilliseconds": 170.18800000000002, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:45:20.5681", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:45:20.7184", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 149.66230000000002ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 149.66230000000002, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:45:21.9783", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:45:21.9868", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 6.539000000000001ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 6.539000000000001, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:45:22.3045", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:45:22.4847", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 196.74710000000002ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 196.74710000000002, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 00:45:47.4133", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json 77", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json", "ContentLength": 77, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 00:45:47.4598", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 01:01:23.9921", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 01:01:26.1891", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 01:01:26.8318", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 01:01:26.8369", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 01:01:26.8405", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 01:01:26.8441", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 01:01:27.0685", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:01:27.2729", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 206.791ms 301 ", "properties": { "ElapsedMilliseconds": 206.791, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:01:27.3728", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:01:27.5223", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 149.1677ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 149.1677, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:01:28.8008", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:01:28.8101", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 10.313ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 10.313, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:01:28.9416", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger-ui-bundle.js  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger-ui-bundle.js", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:01:29.1011", "level": "INFO", "logger": "Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware", "message": "Sending file. Request path: '\/swagger-ui-bundle.js'. Physical path: 'N\/A'", "properties": { "VirtualPath": "\/swagger-ui-bundle.js", "PhysicalPath": "N\/A", "EventId_Id": 2, "EventId_Name": "FileServed", "EventId": {"Id":2, "Name":"FileServed"} } }
{ "time": "2019-11-07 01:01:29.1049", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 164.6189ms 200 application\/javascript", "properties": { "ElapsedMilliseconds": 164.6189, "StatusCode": 200, "ContentType": "application\/javascript", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:01:29.8575", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:01:30.0025", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 145.4703ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 145.4703, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:01:40.8686", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json 77", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json", "ContentLength": 77, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:01:40.9154", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 01:03:03.6499", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 01:03:05.7014", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 01:03:06.2154", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 01:03:06.2203", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 01:03:06.2241", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 01:03:06.2280", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 01:03:06.4054", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:03:06.5872", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 183.1502ms 301 ", "properties": { "ElapsedMilliseconds": 183.1502, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:03:06.6242", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:03:06.8007", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 176.3745ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 176.3745, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:03:08.1079", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:03:08.1225", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 10.9397ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 10.9397, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:03:08.6187", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:03:08.7760", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 157.44910000000002ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 157.44910000000002, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:03:21.2842", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json 77", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json", "ContentLength": 77, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:03:21.3318", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 01:09:33.1654", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 01:09:34.9963", "level": "INFO", "logger": "Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager", "message": "User profile is available. Using '\/Users\/matholum\/.aspnet\/DataProtection-Keys' as key repository; keys will not be encrypted at rest.", "properties": { "FullName": "\/Users\/matholum\/.aspnet\/DataProtection-Keys" } }
{ "time": "2019-11-07 01:09:35.4282", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 01:09:35.4327", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 01:09:35.4358", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 01:09:35.4387", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 01:09:35.6033", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:09:35.7691", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 167.2905ms 301 ", "properties": { "ElapsedMilliseconds": 167.2905, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:09:35.8035", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:09:35.9623", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 158.55800000000002ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 158.55800000000002, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:09:37.2706", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:09:37.2884", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 15.777500000000002ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 15.777500000000002, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:09:37.7373", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:09:37.8755", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 137.68030000000002ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 137.68030000000002, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:17:55.0448", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json 88", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json", "ContentLength": 88, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:17:55.0895", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 01:17:55.3670", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.AppointmentCommandHandler", "message": "Handling command CreateAppointmentCommand for Aggregate Appointment", "properties": { "context": {"Id":"c1a25c5a-8d6b-4932-81f5-db8e5f095975", "Title":"Sample Meeting 1", "StartTime":"2019-11-07T06:17:44.166Z", "Duration":"00:30:00"} } }
{ "time": "2019-11-07 01:17:55.3736", "level": "INFO", "logger": "EventStoreLearning.Common.EventSourcing.AggregateRoot", "message": "Applying event of type AppointmentCreatedEvent to Aggragate Appointment (00000000-0000-0000-0000-000000000000)", "properties": { "context": {"Title":"Sample Meeting 1", "StartTime":"2019-11-07T06:17:44.166Z", "Duration":"00:30:00", "AggregateId":"c1a25c5a-8d6b-4932-81f5-db8e5f095975"} } }
{ "time": "2019-11-07 01:17:55.3746", "level": "DEBUG", "logger": "EventStoreLearning.Common.EventSourcing.AggregateRoot", "message": "Appending new event to uncommited changes for Aggragate Appointment (c1a25c5a-8d6b-4932-81f5-db8e5f095975)", "properties": { "context": {"Title":"Sample Meeting 1", "StartTime":"2019-11-07T06:17:44.166Z", "Duration":"00:30:00", "AggregateId":"c1a25c5a-8d6b-4932-81f5-db8e5f095975"} } }
{ "time": "2019-11-07 01:17:55.3782", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Saving changes on Aggregate Appointment (c1a25c5a-8d6b-4932-81f5-db8e5f095975).", "properties": { "context": {"Id":"c1a25c5a-8d6b-4932-81f5-db8e5f095975", "Version":0} } }
{ "time": "2019-11-07 01:17:55.4657", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Writing changes for Aggregate Appointment (c1a25c5a-8d6b-4932-81f5-db8e5f095975) to the event store.", "properties": { "context": {"Id":"c1a25c5a-8d6b-4932-81f5-db8e5f095975", "Version":0} } }
{ "time": "2019-11-07 01:17:55.4668", "level": "DEBUG", "logger": "EventStoreLearning.Common.EventSourcing.AggregateRoot", "message": "Fetching uncommited changes for Aggragate Appointment (c1a25c5a-8d6b-4932-81f5-db8e5f095975)", "properties": { "context": [{"Title":"Sample Meeting 1", "StartTime":"2019-11-07T06:17:44.166Z", "Duration":"00:30:00", "AggregateId":"c1a25c5a-8d6b-4932-81f5-db8e5f095975"}] } }
{ "time": "2019-11-07 01:17:57.7746", "level": "WARN", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "An error occured while trying to save Aggregate Appointment (c1a25c5a-8d6b-4932-81f5-db8e5f095975)", "properties": { "context": {"error":"EventStore.ClientAPI.Exceptions.ConnectionClosedException: Connection 'ES-96966e4b-4d90-49e0-b039-781bebdb6278' was closed.\n   at EventStoreLearning.EventStore.EventRepository.Save[T](T aggregate, Int64 expectedVersion) in \/Users\/matholum\/Repos\/EventStoreLearning2\/libs\/EventStoreLearning.EventStore\/EventRepository.cs:line 155", "aggregate":"EventStoreLearning.Appointment.Appointment"} } }
{ "time": "2019-11-07 01:17:57.7746", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Reconnection limit reached.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-07 01:17:57.8048", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.NewtonsoftJson.NewtonsoftJsonResultExecutor", "message": "Executing JsonResult, writing value of type 'EventStoreLearning.Appointment.CommandApi.Contract.ErrorResponse'.", "properties": { "Type": "EventStoreLearning.Appointment.CommandApi.Contract.ErrorResponse", "EventId_Id": 1, "EventId_Name": "JsonResultExecuting", "EventId": {"Id":1, "Name":"JsonResultExecuting"} } }
{ "time": "2019-11-07 01:17:57.8209", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Executed action EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi) in 2721.8878ms", "properties": { "ActionName": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi)", "ElapsedMilliseconds": 2721.8878, "EventId_Id": 2, "EventId_Name": "ActionExecuted", "EventId": {"Id":2, "Name":"ActionExecuted"} } }
{ "time": "2019-11-07 01:17:57.8261", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 2781.1585ms 409 application\/json; charset=utf-8", "properties": { "ElapsedMilliseconds": 2781.1585, "StatusCode": 409, "ContentType": "application\/json; charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 01:18:25.6427", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json 88", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json", "ContentLength": 88, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 01:18:25.6501", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 01:18:25.6538", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.AppointmentCommandHandler", "message": "Handling command CreateAppointmentCommand for Aggregate Appointment", "properties": { "context": {"Id":"4d248800-e9b0-4c1b-81d4-d65ab5ed2ade", "Title":"Sample Meeting 1", "StartTime":"2019-11-07T06:17:44.166Z", "Duration":"00:30:00"} } }
{ "time": "2019-11-07 01:18:25.6555", "level": "INFO", "logger": "EventStoreLearning.Common.EventSourcing.AggregateRoot", "message": "Applying event of type AppointmentCreatedEvent to Aggragate Appointment (00000000-0000-0000-0000-000000000000)", "properties": { "context": {"Title":"Sample Meeting 1", "StartTime":"2019-11-07T06:17:44.166Z", "Duration":"00:30:00", "AggregateId":"4d248800-e9b0-4c1b-81d4-d65ab5ed2ade"} } }
{ "time": "2019-11-07 01:18:25.6555", "level": "DEBUG", "logger": "EventStoreLearning.Common.EventSourcing.AggregateRoot", "message": "Appending new event to uncommited changes for Aggragate Appointment (4d248800-e9b0-4c1b-81d4-d65ab5ed2ade)", "properties": { "context": {"Title":"Sample Meeting 1", "StartTime":"2019-11-07T06:17:44.166Z", "Duration":"00:30:00", "AggregateId":"4d248800-e9b0-4c1b-81d4-d65ab5ed2ade"} } }
{ "time": "2019-11-07 01:18:25.6555", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Saving changes on Aggregate Appointment (4d248800-e9b0-4c1b-81d4-d65ab5ed2ade).", "properties": { "context": {"Id":"4d248800-e9b0-4c1b-81d4-d65ab5ed2ade", "Version":0} } }
{ "time": "2019-11-07 01:18:25.6859", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Writing changes for Aggregate Appointment (4d248800-e9b0-4c1b-81d4-d65ab5ed2ade) to the event store.", "properties": { "context": {"Id":"4d248800-e9b0-4c1b-81d4-d65ab5ed2ade", "Version":0} } }
{ "time": "2019-11-07 01:18:25.6890", "level": "DEBUG", "logger": "EventStoreLearning.Common.EventSourcing.AggregateRoot", "message": "Fetching uncommited changes for Aggragate Appointment (4d248800-e9b0-4c1b-81d4-d65ab5ed2ade)", "properties": { "context": [{"Title":"Sample Meeting 1", "StartTime":"2019-11-07T06:17:44.166Z", "Duration":"00:30:00", "AggregateId":"4d248800-e9b0-4c1b-81d4-d65ab5ed2ade"}] } }
{ "time": "2019-11-07 01:18:26.4405", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-07 01:18:26.7770", "level": "DEBUG", "logger": "EventStoreLearning.Common.EventSourcing.AggregateRoot", "message": "Marking changes as committed. Clearing uncommitted list for Aggragate Appointment (4d248800-e9b0-4c1b-81d4-d65ab5ed2ade)", "properties": {  } }
{ "time": "2019-11-07 01:18:26.7779", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-07 01:18:26.7822", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.NewtonsoftJson.NewtonsoftJsonResultExecutor", "message": "Executing JsonResult, writing value of type '<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "properties": { "Type": "<>f__AnonymousType1`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId_Id": 1, "EventId_Name": "JsonResultExecuting", "EventId": {"Id":1, "Name":"JsonResultExecuting"} } }
{ "time": "2019-11-07 01:18:26.7887", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Executed action EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi) in 1134.5742ms", "properties": { "ActionName": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi)", "ElapsedMilliseconds": 1134.5742, "EventId_Id": 2, "EventId_Name": "ActionExecuted", "EventId": {"Id":2, "Name":"ActionExecuted"} } }
{ "time": "2019-11-07 01:18:26.7922", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 1150.3471ms 201 application\/json; charset=utf-8", "properties": { "ElapsedMilliseconds": 1150.3471, "StatusCode": 201, "ContentType": "application\/json; charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 14:11:01.6336", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.CommandApi.Program", "message": "init main", "properties": {  } }
{ "time": "2019-11-07 14:11:03.9503", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Now listening on: https:\/\/localhost:5001", "properties": { "address": "https:\/\/localhost:5001" } }
{ "time": "2019-11-07 14:11:03.9619", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Application started. Press Ctrl+C to shut down.", "properties": {  } }
{ "time": "2019-11-07 14:11:03.9652", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Hosting environment: Development", "properties": { "envName": "Development" } }
{ "time": "2019-11-07 14:11:03.9685", "level": "INFO", "logger": "Microsoft.Hosting.Lifetime", "message": "Content root path: \/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi", "properties": { "contentRoot": "\/Users\/matholum\/Repos\/EventStoreLearning2\/apps\/appointment\/EventStoreLearning.Appointment.CommandApi" } }
{ "time": "2019-11-07 14:11:04.1536", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 14:11:04.3110", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 159.2405ms 301 ", "properties": { "ElapsedMilliseconds": 159.2405, "StatusCode": 301, "ContentType": null, "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 14:11:04.3945", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 14:11:04.5323", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 137.09820000000002ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 137.09820000000002, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 14:11:06.5775", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/index.html  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/index.html", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 14:11:06.5920", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 36.3162ms 200 text\/html;charset=utf-8", "properties": { "ElapsedMilliseconds": 36.3162, "StatusCode": 200, "ContentType": "text\/html;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 14:11:07.0858", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 GET https:\/\/localhost:5001\/swagger\/v1\/swagger.json  ", "properties": { "Protocol": "HTTP\/1.1", "Method": "GET", "ContentType": null, "ContentLength": null, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/swagger\/v1\/swagger.json", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 14:11:07.2752", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 193.19ms 200 application\/json;charset=utf-8", "properties": { "ElapsedMilliseconds": 193.19, "StatusCode": 200, "ContentType": "application\/json;charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
{ "time": "2019-11-07 14:12:19.1164", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request starting HTTP\/1.1 POST https:\/\/localhost:5001\/v1\/Appointment application\/json 92", "properties": { "Protocol": "HTTP\/1.1", "Method": "POST", "ContentType": "application\/json", "ContentLength": 92, "Scheme": "https", "Host": "localhost:5001", "PathBase": "", "Path": "\/v1\/Appointment", "QueryString": "", "EventId_Id": 1, "EventId_Name": null, "EventId": {"Id":1} } }
{ "time": "2019-11-07 14:12:19.1274", "level": "INFO", "logger": "Microsoft.AspNetCore.Routing.EndpointMiddleware", "message": "Executing endpoint 'EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi)'", "properties": { "EndpointName": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi)", "EventId_Id": 0, "EventId_Name": "ExecutingEndpoint", "EventId": {"Id":0, "Name":"ExecutingEndpoint"} } }
{ "time": "2019-11-07 14:12:19.1831", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Route matched with {action = \"Post\", controller = \"Appointment\"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest) on controller EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController (EventStoreLearning.Appointment.CommandApi).", "properties": { "RouteData": "{action = \"Post\", controller = \"Appointment\"}", "MethodInfo": "System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.JsonResult] Post(EventStoreLearning.Appointment.CommandApi.Contract.CreateAppointmentRequest)", "Controller": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController", "AssemblyName": "EventStoreLearning.Appointment.CommandApi", "EventId_Id": 3, "EventId_Name": "ControllerActionExecuting", "EventId": {"Id":3, "Name":"ControllerActionExecuting"} } }
{ "time": "2019-11-07 14:12:19.4858", "level": "DEBUG", "logger": "EventStoreLearning.Appointment.AppointmentCommandHandler", "message": "Handling command CreateAppointmentCommand for Aggregate Appointment", "properties": { "context": {"Id":"27992a28-449d-4d0f-9b63-4c39e3aeaeff", "Title":"Meet with John Smith", "StartTime":"2019-11-07T19:11:19.25Z", "Duration":"01:00:00"} } }
{ "time": "2019-11-07 14:12:19.4925", "level": "INFO", "logger": "EventStoreLearning.Common.EventSourcing.AggregateRoot", "message": "Applying event of type AppointmentCreatedEvent to Aggragate Appointment (00000000-0000-0000-0000-000000000000)", "properties": { "context": {"Title":"Meet with John Smith", "StartTime":"2019-11-07T19:11:19.25Z", "Duration":"01:00:00", "AggregateId":"27992a28-449d-4d0f-9b63-4c39e3aeaeff"} } }
{ "time": "2019-11-07 14:12:19.4933", "level": "DEBUG", "logger": "EventStoreLearning.Common.EventSourcing.AggregateRoot", "message": "Appending new event to uncommited changes for Aggragate Appointment (27992a28-449d-4d0f-9b63-4c39e3aeaeff)", "properties": { "context": {"Title":"Meet with John Smith", "StartTime":"2019-11-07T19:11:19.25Z", "Duration":"01:00:00", "AggregateId":"27992a28-449d-4d0f-9b63-4c39e3aeaeff"} } }
{ "time": "2019-11-07 14:12:19.4968", "level": "INFO", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Saving changes on Aggregate Appointment (27992a28-449d-4d0f-9b63-4c39e3aeaeff).", "properties": { "context": {"Id":"27992a28-449d-4d0f-9b63-4c39e3aeaeff", "Version":0} } }
{ "time": "2019-11-07 14:12:19.5878", "level": "DEBUG", "logger": "EventStoreLearning.EventStore.EventRepository", "message": "Writing changes for Aggregate Appointment (27992a28-449d-4d0f-9b63-4c39e3aeaeff) to the event store.", "properties": { "context": {"Id":"27992a28-449d-4d0f-9b63-4c39e3aeaeff", "Version":0} } }
{ "time": "2019-11-07 14:12:19.5888", "level": "DEBUG", "logger": "EventStoreLearning.Common.EventSourcing.AggregateRoot", "message": "Fetching uncommited changes for Aggragate Appointment (27992a28-449d-4d0f-9b63-4c39e3aeaeff)", "properties": { "context": [{"Title":"Meet with John Smith", "StartTime":"2019-11-07T19:11:19.25Z", "Duration":"01:00:00", "AggregateId":"27992a28-449d-4d0f-9b63-4c39e3aeaeff"}] } }
{ "time": "2019-11-07 14:12:20.3652", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was connected.", "properties": { "context": {"RemoteEndPoint":"127.0.0.1:1113", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-07 14:12:20.6526", "level": "DEBUG", "logger": "EventStoreLearning.Common.EventSourcing.AggregateRoot", "message": "Marking changes as committed. Clearing uncommitted list for Aggragate Appointment (27992a28-449d-4d0f-9b63-4c39e3aeaeff)", "properties": {  } }
{ "time": "2019-11-07 14:12:20.6597", "level": "TRACE", "logger": "EventStoreLearning.EventStore.EventStoreClient", "message": "The event store connection was closed.", "properties": { "context": {"Reason":"Connection close requested by client.", "Connection":"EventStore.ClientAPI.Internal.EventStoreNodeConnection"} } }
{ "time": "2019-11-07 14:12:20.6703", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.NewtonsoftJson.NewtonsoftJsonResultExecutor", "message": "Executing JsonResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.", "properties": { "Type": "<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]", "EventId_Id": 1, "EventId_Name": "JsonResultExecuting", "EventId": {"Id":1, "Name":"JsonResultExecuting"} } }
{ "time": "2019-11-07 14:12:20.6875", "level": "INFO", "logger": "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", "message": "Executed action EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi) in 1493.4725ms", "properties": { "ActionName": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi)", "ElapsedMilliseconds": 1493.4725, "EventId_Id": 2, "EventId_Name": "ActionExecuted", "EventId": {"Id":2, "Name":"ActionExecuted"} } }
{ "time": "2019-11-07 14:12:20.6916", "level": "INFO", "logger": "Microsoft.AspNetCore.Routing.EndpointMiddleware", "message": "Executed endpoint 'EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi)'", "properties": { "EndpointName": "EventStoreLearning.Appointment.CommandApi.Controllers.AppointmentController.Post (EventStoreLearning.Appointment.CommandApi)", "EventId_Id": 1, "EventId_Name": "ExecutedEndpoint", "EventId": {"Id":1, "Name":"ExecutedEndpoint"} } }
{ "time": "2019-11-07 14:12:20.6960", "level": "INFO", "logger": "Microsoft.AspNetCore.Hosting.Diagnostics", "message": "Request finished in 1581.1342ms 201 application\/json; charset=utf-8", "properties": { "ElapsedMilliseconds": 1581.1342, "StatusCode": 201, "ContentType": "application\/json; charset=utf-8", "EventId_Id": 2, "EventId_Name": null, "EventId": {"Id":2} } }
